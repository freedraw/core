'use strict'

var DisplayNode = require('./display-node')
var inherits = require('fd/inherits')
var emitter = require('fd/emitter')
var asap = require('asap')

function Document(props, children) {
  this.changes = null
  this.emitChanges = this.emitChanges.bind(this)

  DisplayNode.call(this, props, children)
}
inherits(Document, DisplayNode)
emitter(Document.prototype)

Document.prototype.isDocument = true

Document.prototype.registerChanges = function(changes) {
  if (this.changes) {
    this.changes = this.changes.concat(changes)
    return
  }
  this.changes = changes
  asap(this.emitChanges)
}

Document.prototype.emitChanges = function() {
  this.emit('change', this.changes)
  this.changes = null
}

module.exports = Document
