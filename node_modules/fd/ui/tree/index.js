var h = require('fd/html')
var Node = require('./node')
var asap = require('asap')

function Tree(editor) {
  this.editor = editor
  this.root = null
  this.nodes = new WeakMap

  this.el = h('.tree panel', [
    h('.panel-header'),
    this.content = h('.panel-content'),
    h('.panel-footer'),
  ])

  editor.on('documentChange', this.onDocumentChange, this)
  this.onDocumentChange()
}

Tree.prototype.onDocumentChange = function() {
  if (this.document) this.document.unlisten('change', this.update, this)
  this.document = this.editor.document
  this.reload()
  asap(function() {
    this.document.on('change', this.update, this)
  }.bind(this))
}

Tree.prototype.update = function(changes) {
  for (var i = changes.length; i--;) {
    var c = changes[i]
    var n = this.nodes.get(c.parent)
    if (!n) continue
    n.update(c)
  }
}

Tree.prototype.reload = function() {
  if (this.root) {
    this.content.removeChild(this.root.el)
    this.root.detach()
  }
  this.root = new Node(this, null, this.document)
  this.root.toggle()
  this.content.appendChild(this.root.container)
}

module.exports = Tree
